    OPERADORES

    Símbolos especiais que têm um significado próprio para a linguagem e estão associados
à determinadas operações.

    Geralmente, as primeiras palavras que ouvimos em um curso de programação são:
Um programa é um conjunto de instruções lógicas que, queando executadas, produzem algum
resultado. Com isto em mente, ao começar a criar as primeiras linhas de código, logo você
notará que é comum receber dados do usuário, prover alguma lógica para processá-los e,
então, apresentar o resultado deste processo.

    CLASSIFICAÇÃO DOS OPERADORES

    Atribuição
    Representado pelo símbolo de igualdade "=".
    O operador de atribuição é utilizado para definir o valor inicial ou sobrescrever o
valor de uma variável. Em Java, definimos um tipo, nome e, opcionalmente, atribuímos um valor
à variável através do operador de atribuição.
    Exemplos:
    // classe Operadores.java
    String nome = "JOHNNY";
    int idade = 16;
    double peso = 68.5;
    char sexo = 'M';
    boolean doadorOrgao = false;
    Date dataNascimento = new Date();

    Aritméticos
    O operador aritmético é utilizado para realizar operações matemáticas entre valores numéricos,
podendo se tornar, ou não, uma expressão mais complexa.
    Os operadores aritméticos são: "+" (adição), "-" (subtração), "*" (multiplicação) e "/" (divisão).
    Exemplos:
    // classe Operadores.java
    double soma = 10.5 + 15.7;
    int subtracao = 113 - 25;
    int multiplicacao = 20 * 7;
    int divisao = 15 / 3;
    int modulo = 18 % 3; // Módulo representa o resto da divisão de um número pelo outro.
    double resultado = (10 * 7) + (20 / 4)

    ATENÇÃO!!! O operador de adição (+), quando utilizado em variáveis do tipo texto (String),
realizará a "concatenação de textos".
    Exemplos:
    // classe Operadores.java
    String nomeCompleto = "LINGUAGEM" + "JAVA";

    // Qual o resultado das expressões abaixo?
    String concatenacao = "?";
    concatenacao = 1 + 1 + 1 + "1";
    concatenacao = 1 + "1" + 1 + 1;
    concatenacao = 1 + "1" + 1 + "1";
    concatenacao = "1" + 1 + 1 + 1;
    concatenacao = "1" + (1 + 1 + 1);
